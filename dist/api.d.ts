/**
 * Cards API
 * The api to manage cards
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import type { Configuration } from './configuration';
import type { AxiosPromise, AxiosInstance, RawAxiosRequestConfig } from 'axios';
import type { RequestArgs } from './base';
import { BaseAPI } from './base';
/**
 *
 * @export
 * @interface CreateCardDto
 */
export interface CreateCardDto {
    /**
     *
     * @type {string}
     * @memberof CreateCardDto
     */
    'spaceID': string;
    /**
     *
     * @type {string}
     * @memberof CreateCardDto
     */
    'name': string;
    /**
     *
     * @type {string}
     * @memberof CreateCardDto
     */
    'parentCardID': string;
    /**
     *
     * @type {object}
     * @memberof CreateCardDto
     */
    'attributes': object;
}
/**
 *
 * @export
 * @interface CreateSpaceDto
 */
export interface CreateSpaceDto {
    /**
     *
     * @type {string}
     * @memberof CreateSpaceDto
     */
    'spaceID': string;
}
/**
 *
 * @export
 * @interface SignInRequest
 */
export interface SignInRequest {
    /**
     *
     * @type {string}
     * @memberof SignInRequest
     */
    'login': string;
    /**
     *
     * @type {string}
     * @memberof SignInRequest
     */
    'password': string;
}
/**
 *
 * @export
 * @interface UpdateCardAttributesDto
 */
export interface UpdateCardAttributesDto {
    /**
     *
     * @type {string}
     * @memberof UpdateCardAttributesDto
     */
    'spaceID': string;
    /**
     *
     * @type {object}
     * @memberof UpdateCardAttributesDto
     */
    'attributes': object;
}
/**
 *
 * @export
 * @interface UpdateCardDto
 */
export interface UpdateCardDto {
    /**
     *
     * @type {string}
     * @memberof UpdateCardDto
     */
    'spaceID': string;
    /**
     *
     * @type {string}
     * @memberof UpdateCardDto
     */
    'name': string;
    /**
     *
     * @type {string}
     * @memberof UpdateCardDto
     */
    'parentCardID': string;
    /**
     *
     * @type {object}
     * @memberof UpdateCardDto
     */
    'attributes': object;
}
/**
 *
 * @export
 * @interface UpdateSpaceDto
 */
export interface UpdateSpaceDto {
    /**
     *
     * @type {string}
     * @memberof UpdateSpaceDto
     */
    'spaceID'?: string;
}
/**
 * CardsAuthApi - axios parameter creator
 * @export
 */
export declare const CardsAuthApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerCheckIdentity: (options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {SignInRequest} signInRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerSignIn: (signInRequest: SignInRequest, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * CardsAuthApi - functional programming interface
 * @export
 */
export declare const CardsAuthApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerCheckIdentity(options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {SignInRequest} signInRequest
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerSignIn(signInRequest: SignInRequest, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * CardsAuthApi - factory interface
 * @export
 */
export declare const CardsAuthApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerCheckIdentity(options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @param {CardsAuthApiAuthControllerSignInRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    authControllerSignIn(requestParameters: CardsAuthApiAuthControllerSignInRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
};
/**
 * Request parameters for authControllerSignIn operation in CardsAuthApi.
 * @export
 * @interface CardsAuthApiAuthControllerSignInRequest
 */
export interface CardsAuthApiAuthControllerSignInRequest {
    /**
     *
     * @type {SignInRequest}
     * @memberof CardsAuthApiAuthControllerSignIn
     */
    readonly signInRequest: SignInRequest;
}
/**
 * CardsAuthApi - object-oriented interface
 * @export
 * @class CardsAuthApi
 * @extends {BaseAPI}
 */
export declare class CardsAuthApi extends BaseAPI {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CardsAuthApi
     */
    authControllerCheckIdentity(options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {CardsAuthApiAuthControllerSignInRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CardsAuthApi
     */
    authControllerSignIn(requestParameters: CardsAuthApiAuthControllerSignInRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
}
/**
 * CardsCRUDApi - axios parameter creator
 * @export
 */
export declare const CardsCRUDApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {string} type
     * @param {CreateCardDto} createCardDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cardControllerCreate: (type: string, createCardDto: CreateCardDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} spaceID
     * @param {string} type
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cardControllerFindAllInSpace: (spaceID: string, type: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} spaceID
     * @param {string} type
     * @param {string} parentID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cardControllerFindChildren: (spaceID: string, type: string, parentID: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} spaceID
     * @param {string} type
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cardControllerFindOne: (spaceID: string, type: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} spaceID
     * @param {string} type
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cardControllerRemove: (spaceID: string, type: string, id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} type
     * @param {string} id
     * @param {UpdateCardDto} updateCardDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cardControllerUpdate: (type: string, id: string, updateCardDto: UpdateCardDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} type
     * @param {string} id
     * @param {UpdateCardAttributesDto} updateCardAttributesDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cardControllerUpdateCardAttributes: (type: string, id: string, updateCardAttributesDto: UpdateCardAttributesDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * CardsCRUDApi - functional programming interface
 * @export
 */
export declare const CardsCRUDApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {string} type
     * @param {CreateCardDto} createCardDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cardControllerCreate(type: string, createCardDto: CreateCardDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} spaceID
     * @param {string} type
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cardControllerFindAllInSpace(spaceID: string, type: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} spaceID
     * @param {string} type
     * @param {string} parentID
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cardControllerFindChildren(spaceID: string, type: string, parentID: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} spaceID
     * @param {string} type
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cardControllerFindOne(spaceID: string, type: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} spaceID
     * @param {string} type
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cardControllerRemove(spaceID: string, type: string, id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} type
     * @param {string} id
     * @param {UpdateCardDto} updateCardDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cardControllerUpdate(type: string, id: string, updateCardDto: UpdateCardDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} type
     * @param {string} id
     * @param {UpdateCardAttributesDto} updateCardAttributesDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cardControllerUpdateCardAttributes(type: string, id: string, updateCardAttributesDto: UpdateCardAttributesDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * CardsCRUDApi - factory interface
 * @export
 */
export declare const CardsCRUDApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {CardsCRUDApiCardControllerCreateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cardControllerCreate(requestParameters: CardsCRUDApiCardControllerCreateRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @param {CardsCRUDApiCardControllerFindAllInSpaceRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cardControllerFindAllInSpace(requestParameters: CardsCRUDApiCardControllerFindAllInSpaceRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @param {CardsCRUDApiCardControllerFindChildrenRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cardControllerFindChildren(requestParameters: CardsCRUDApiCardControllerFindChildrenRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @param {CardsCRUDApiCardControllerFindOneRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cardControllerFindOne(requestParameters: CardsCRUDApiCardControllerFindOneRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @param {CardsCRUDApiCardControllerRemoveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cardControllerRemove(requestParameters: CardsCRUDApiCardControllerRemoveRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @param {CardsCRUDApiCardControllerUpdateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cardControllerUpdate(requestParameters: CardsCRUDApiCardControllerUpdateRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @param {CardsCRUDApiCardControllerUpdateCardAttributesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    cardControllerUpdateCardAttributes(requestParameters: CardsCRUDApiCardControllerUpdateCardAttributesRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
};
/**
 * Request parameters for cardControllerCreate operation in CardsCRUDApi.
 * @export
 * @interface CardsCRUDApiCardControllerCreateRequest
 */
export interface CardsCRUDApiCardControllerCreateRequest {
    /**
     *
     * @type {string}
     * @memberof CardsCRUDApiCardControllerCreate
     */
    readonly type: string;
    /**
     *
     * @type {CreateCardDto}
     * @memberof CardsCRUDApiCardControllerCreate
     */
    readonly createCardDto: CreateCardDto;
}
/**
 * Request parameters for cardControllerFindAllInSpace operation in CardsCRUDApi.
 * @export
 * @interface CardsCRUDApiCardControllerFindAllInSpaceRequest
 */
export interface CardsCRUDApiCardControllerFindAllInSpaceRequest {
    /**
     *
     * @type {string}
     * @memberof CardsCRUDApiCardControllerFindAllInSpace
     */
    readonly spaceID: string;
    /**
     *
     * @type {string}
     * @memberof CardsCRUDApiCardControllerFindAllInSpace
     */
    readonly type: string;
}
/**
 * Request parameters for cardControllerFindChildren operation in CardsCRUDApi.
 * @export
 * @interface CardsCRUDApiCardControllerFindChildrenRequest
 */
export interface CardsCRUDApiCardControllerFindChildrenRequest {
    /**
     *
     * @type {string}
     * @memberof CardsCRUDApiCardControllerFindChildren
     */
    readonly spaceID: string;
    /**
     *
     * @type {string}
     * @memberof CardsCRUDApiCardControllerFindChildren
     */
    readonly type: string;
    /**
     *
     * @type {string}
     * @memberof CardsCRUDApiCardControllerFindChildren
     */
    readonly parentID: string;
}
/**
 * Request parameters for cardControllerFindOne operation in CardsCRUDApi.
 * @export
 * @interface CardsCRUDApiCardControllerFindOneRequest
 */
export interface CardsCRUDApiCardControllerFindOneRequest {
    /**
     *
     * @type {string}
     * @memberof CardsCRUDApiCardControllerFindOne
     */
    readonly spaceID: string;
    /**
     *
     * @type {string}
     * @memberof CardsCRUDApiCardControllerFindOne
     */
    readonly type: string;
    /**
     *
     * @type {string}
     * @memberof CardsCRUDApiCardControllerFindOne
     */
    readonly id: string;
}
/**
 * Request parameters for cardControllerRemove operation in CardsCRUDApi.
 * @export
 * @interface CardsCRUDApiCardControllerRemoveRequest
 */
export interface CardsCRUDApiCardControllerRemoveRequest {
    /**
     *
     * @type {string}
     * @memberof CardsCRUDApiCardControllerRemove
     */
    readonly spaceID: string;
    /**
     *
     * @type {string}
     * @memberof CardsCRUDApiCardControllerRemove
     */
    readonly type: string;
    /**
     *
     * @type {string}
     * @memberof CardsCRUDApiCardControllerRemove
     */
    readonly id: string;
}
/**
 * Request parameters for cardControllerUpdate operation in CardsCRUDApi.
 * @export
 * @interface CardsCRUDApiCardControllerUpdateRequest
 */
export interface CardsCRUDApiCardControllerUpdateRequest {
    /**
     *
     * @type {string}
     * @memberof CardsCRUDApiCardControllerUpdate
     */
    readonly type: string;
    /**
     *
     * @type {string}
     * @memberof CardsCRUDApiCardControllerUpdate
     */
    readonly id: string;
    /**
     *
     * @type {UpdateCardDto}
     * @memberof CardsCRUDApiCardControllerUpdate
     */
    readonly updateCardDto: UpdateCardDto;
}
/**
 * Request parameters for cardControllerUpdateCardAttributes operation in CardsCRUDApi.
 * @export
 * @interface CardsCRUDApiCardControllerUpdateCardAttributesRequest
 */
export interface CardsCRUDApiCardControllerUpdateCardAttributesRequest {
    /**
     *
     * @type {string}
     * @memberof CardsCRUDApiCardControllerUpdateCardAttributes
     */
    readonly type: string;
    /**
     *
     * @type {string}
     * @memberof CardsCRUDApiCardControllerUpdateCardAttributes
     */
    readonly id: string;
    /**
     *
     * @type {UpdateCardAttributesDto}
     * @memberof CardsCRUDApiCardControllerUpdateCardAttributes
     */
    readonly updateCardAttributesDto: UpdateCardAttributesDto;
}
/**
 * CardsCRUDApi - object-oriented interface
 * @export
 * @class CardsCRUDApi
 * @extends {BaseAPI}
 */
export declare class CardsCRUDApi extends BaseAPI {
    /**
     *
     * @param {CardsCRUDApiCardControllerCreateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CardsCRUDApi
     */
    cardControllerCreate(requestParameters: CardsCRUDApiCardControllerCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {CardsCRUDApiCardControllerFindAllInSpaceRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CardsCRUDApi
     */
    cardControllerFindAllInSpace(requestParameters: CardsCRUDApiCardControllerFindAllInSpaceRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {CardsCRUDApiCardControllerFindChildrenRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CardsCRUDApi
     */
    cardControllerFindChildren(requestParameters: CardsCRUDApiCardControllerFindChildrenRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {CardsCRUDApiCardControllerFindOneRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CardsCRUDApi
     */
    cardControllerFindOne(requestParameters: CardsCRUDApiCardControllerFindOneRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {CardsCRUDApiCardControllerRemoveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CardsCRUDApi
     */
    cardControllerRemove(requestParameters: CardsCRUDApiCardControllerRemoveRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {CardsCRUDApiCardControllerUpdateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CardsCRUDApi
     */
    cardControllerUpdate(requestParameters: CardsCRUDApiCardControllerUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {CardsCRUDApiCardControllerUpdateCardAttributesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CardsCRUDApi
     */
    cardControllerUpdateCardAttributes(requestParameters: CardsCRUDApiCardControllerUpdateCardAttributesRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
}
/**
 * SpaceCRUDApi - axios parameter creator
 * @export
 */
export declare const SpaceCRUDApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     *
     * @param {CreateSpaceDto} createSpaceDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    spaceControllerCreate: (createSpaceDto: CreateSpaceDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    spaceControllerFindAll: (options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    spaceControllerFindOne: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    spaceControllerRemove: (id: string, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
    /**
     *
     * @param {string} id
     * @param {UpdateSpaceDto} updateSpaceDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    spaceControllerUpdate: (id: string, updateSpaceDto: UpdateSpaceDto, options?: RawAxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * SpaceCRUDApi - functional programming interface
 * @export
 */
export declare const SpaceCRUDApiFp: (configuration?: Configuration) => {
    /**
     *
     * @param {CreateSpaceDto} createSpaceDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    spaceControllerCreate(createSpaceDto: CreateSpaceDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    spaceControllerFindAll(options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    spaceControllerFindOne(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    spaceControllerRemove(id: string, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     *
     * @param {string} id
     * @param {UpdateSpaceDto} updateSpaceDto
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    spaceControllerUpdate(id: string, updateSpaceDto: UpdateSpaceDto, options?: RawAxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * SpaceCRUDApi - factory interface
 * @export
 */
export declare const SpaceCRUDApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     *
     * @param {SpaceCRUDApiSpaceControllerCreateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    spaceControllerCreate(requestParameters: SpaceCRUDApiSpaceControllerCreateRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    spaceControllerFindAll(options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @param {SpaceCRUDApiSpaceControllerFindOneRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    spaceControllerFindOne(requestParameters: SpaceCRUDApiSpaceControllerFindOneRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @param {SpaceCRUDApiSpaceControllerRemoveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    spaceControllerRemove(requestParameters: SpaceCRUDApiSpaceControllerRemoveRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
    /**
     *
     * @param {SpaceCRUDApiSpaceControllerUpdateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    spaceControllerUpdate(requestParameters: SpaceCRUDApiSpaceControllerUpdateRequest, options?: RawAxiosRequestConfig): AxiosPromise<void>;
};
/**
 * Request parameters for spaceControllerCreate operation in SpaceCRUDApi.
 * @export
 * @interface SpaceCRUDApiSpaceControllerCreateRequest
 */
export interface SpaceCRUDApiSpaceControllerCreateRequest {
    /**
     *
     * @type {CreateSpaceDto}
     * @memberof SpaceCRUDApiSpaceControllerCreate
     */
    readonly createSpaceDto: CreateSpaceDto;
}
/**
 * Request parameters for spaceControllerFindOne operation in SpaceCRUDApi.
 * @export
 * @interface SpaceCRUDApiSpaceControllerFindOneRequest
 */
export interface SpaceCRUDApiSpaceControllerFindOneRequest {
    /**
     *
     * @type {string}
     * @memberof SpaceCRUDApiSpaceControllerFindOne
     */
    readonly id: string;
}
/**
 * Request parameters for spaceControllerRemove operation in SpaceCRUDApi.
 * @export
 * @interface SpaceCRUDApiSpaceControllerRemoveRequest
 */
export interface SpaceCRUDApiSpaceControllerRemoveRequest {
    /**
     *
     * @type {string}
     * @memberof SpaceCRUDApiSpaceControllerRemove
     */
    readonly id: string;
}
/**
 * Request parameters for spaceControllerUpdate operation in SpaceCRUDApi.
 * @export
 * @interface SpaceCRUDApiSpaceControllerUpdateRequest
 */
export interface SpaceCRUDApiSpaceControllerUpdateRequest {
    /**
     *
     * @type {string}
     * @memberof SpaceCRUDApiSpaceControllerUpdate
     */
    readonly id: string;
    /**
     *
     * @type {UpdateSpaceDto}
     * @memberof SpaceCRUDApiSpaceControllerUpdate
     */
    readonly updateSpaceDto: UpdateSpaceDto;
}
/**
 * SpaceCRUDApi - object-oriented interface
 * @export
 * @class SpaceCRUDApi
 * @extends {BaseAPI}
 */
export declare class SpaceCRUDApi extends BaseAPI {
    /**
     *
     * @param {SpaceCRUDApiSpaceControllerCreateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SpaceCRUDApi
     */
    spaceControllerCreate(requestParameters: SpaceCRUDApiSpaceControllerCreateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SpaceCRUDApi
     */
    spaceControllerFindAll(options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {SpaceCRUDApiSpaceControllerFindOneRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SpaceCRUDApi
     */
    spaceControllerFindOne(requestParameters: SpaceCRUDApiSpaceControllerFindOneRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {SpaceCRUDApiSpaceControllerRemoveRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SpaceCRUDApi
     */
    spaceControllerRemove(requestParameters: SpaceCRUDApiSpaceControllerRemoveRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
    /**
     *
     * @param {SpaceCRUDApiSpaceControllerUpdateRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SpaceCRUDApi
     */
    spaceControllerUpdate(requestParameters: SpaceCRUDApiSpaceControllerUpdateRequest, options?: RawAxiosRequestConfig): Promise<import("axios").AxiosResponse<void, any>>;
}
